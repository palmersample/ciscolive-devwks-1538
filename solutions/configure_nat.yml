---
#
# Testcase unique IDs (uids) to execute. Unique IDs may be specified on the
# CLI using the "--uids <uid>" but adding it here saves keystrokes!
# By default, no testcases will be run without specifying the uids.
uids:
  - ConfigureInsideNat

# Name of this test (uid)
ConfigureInsideNat:
  source:
    pkg: genie.libs.sdk
    class: triggers.blitz.blitz.Blitz

  test_sections:
    - Initial Ping:
      - api:
          function: ping
          device: uut
          arguments:
            address: 10.10.12.254
            source: Loopback0
          include:
            - value_operator('success_rate_percent', '==', 0)
            # Alternative: - contains_key_value('success_rate_percent', 0.0)
          save:
            - variable_name: structured_ping_data

      - print:
          item:
            value: "%VARIABLES{structured_ping_data}"

    - Configure NAT:
      - configure:
          device: uut
          command: |
            ip access-list standard NAT-ACL
            permit 192.168.1.0 0.0.0.255

      - api:
          function: configure_nat_in_out
          device: uut
          arguments:
            inside_interface: Loopback0
            outside_interface: GigabitEthernet2

      - api:
          function: configure_nat_overload_rule
          device: uut
          arguments:
            interface: GigabitEthernet2
            access_list_name: NAT-ACL

    - Verify connectivity:
      - api:
          function: ping
          device: uut
          arguments:
            address: 10.10.12.254
            source: Loopback0
          include:
            - value_operator('success_rate_percent', '>=', 80)
          save:
            - variable_name: structured_ping_data

      - print:
          item:
            value: "%VARIABLES{structured_ping_data}"

      - parse:
          command: show ip nat translations
          device: uut
          include:
            # Inside global address varies by pod - but the local/outside are static.
            - contains_key_value('inside_local', '192.168.1.128:.*', value_regex=True)
            - contains_key_value('outside_local', '10.10.12.254:.*', value_regex=True)
            - contains_key_value('outside_global', '10.10.12.254:.*', value_regex=True)
          save:
            - variable_name: parsed_nat_translations

      - print:
          item:
            value: "%VARIABLES{parsed_nat_translations}"
